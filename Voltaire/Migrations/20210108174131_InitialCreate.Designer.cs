// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Voltaire;

namespace Voltaire.Migrations
{
    [DbContext(typeof(DataBase))]
    [Migration("20210108174131_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Voltaire.Models.BannedIdentifier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("GuildID")
                        .HasColumnType("int");

                    b.Property<string>("Identifier")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ID");

                    b.HasIndex("GuildID");

                    b.ToTable("BannedIdentifiers");
                });

            modelBuilder.Entity("Voltaire.Models.Guild", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AdminRole")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("AllowDirectMessage")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AllowedRole")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DiscordId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("MessagesSentThisMonth")
                        .HasColumnType("int");

                    b.Property<string>("SubscriptionId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("TrackingMonth")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("UseEmbed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("UseUserIdentifiers")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UserIdentifierSeed")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("Voltaire.Models.BannedIdentifier", b =>
                {
                    b.HasOne("Voltaire.Models.Guild", null)
                        .WithMany("BannedIdentifiers")
                        .HasForeignKey("GuildID");
                });
#pragma warning restore 612, 618
        }
    }
}
